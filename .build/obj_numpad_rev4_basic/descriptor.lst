   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LFB100:
  15               		.file 1 "../../tmk_core/protocol/lufa/descriptor.c"
   1:../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  77:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  78:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
  80:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0081),
 144:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0081), /* System Power Down */
 146:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 176:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 182:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(500)
 270:../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../tmk_core/protocol/lufa/descriptor.c **** 
 490:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 491:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 492:../../tmk_core/protocol/lufa/descriptor.c ****         {
 493:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 494:../../tmk_core/protocol/lufa/descriptor.c **** 
 495:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 496:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 497:../../tmk_core/protocol/lufa/descriptor.c **** 
 498:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 499:../../tmk_core/protocol/lufa/descriptor.c **** 
 500:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 501:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 502:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 503:../../tmk_core/protocol/lufa/descriptor.c **** 
 504:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 505:../../tmk_core/protocol/lufa/descriptor.c ****         },
 506:../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 508:../../tmk_core/protocol/lufa/descriptor.c ****         {
 509:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 510:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 511:../../tmk_core/protocol/lufa/descriptor.c **** 
 512:../../tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 513:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 514:../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 516:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 517:../../tmk_core/protocol/lufa/descriptor.c ****         },
 518:../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 520:../../tmk_core/protocol/lufa/descriptor.c ****         {
 521:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 522:../../tmk_core/protocol/lufa/descriptor.c **** 
 523:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 524:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 525:../../tmk_core/protocol/lufa/descriptor.c **** 
 526:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 527:../../tmk_core/protocol/lufa/descriptor.c **** 
 528:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 529:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 530:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 531:../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 533:../../tmk_core/protocol/lufa/descriptor.c ****         },
 534:../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 536:../../tmk_core/protocol/lufa/descriptor.c ****         {
 537:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 538:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 539:../../tmk_core/protocol/lufa/descriptor.c **** 
 540:../../tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 541:../../tmk_core/protocol/lufa/descriptor.c **** 
 542:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 543:../../tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 544:../../tmk_core/protocol/lufa/descriptor.c ****         },
 545:../../tmk_core/protocol/lufa/descriptor.c **** 
 546:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 547:../../tmk_core/protocol/lufa/descriptor.c ****         {
 548:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 549:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 550:../../tmk_core/protocol/lufa/descriptor.c **** 
 551:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 552:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 553:../../tmk_core/protocol/lufa/descriptor.c **** 
 554:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 555:../../tmk_core/protocol/lufa/descriptor.c ****         },
 556:../../tmk_core/protocol/lufa/descriptor.c **** 
 557:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 558:../../tmk_core/protocol/lufa/descriptor.c ****         {
 559:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 560:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 561:../../tmk_core/protocol/lufa/descriptor.c **** 
 562:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 563:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 564:../../tmk_core/protocol/lufa/descriptor.c **** 
 565:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 566:../../tmk_core/protocol/lufa/descriptor.c ****         },
 567:../../tmk_core/protocol/lufa/descriptor.c **** 
 568:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 569:../../tmk_core/protocol/lufa/descriptor.c ****         {
 570:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 571:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 572:../../tmk_core/protocol/lufa/descriptor.c **** 
 573:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 574:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 575:../../tmk_core/protocol/lufa/descriptor.c **** 
 576:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 577:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 578:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 579:../../tmk_core/protocol/lufa/descriptor.c **** 
 580:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 581:../../tmk_core/protocol/lufa/descriptor.c ****         },
 582:../../tmk_core/protocol/lufa/descriptor.c **** 
 583:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 584:../../tmk_core/protocol/lufa/descriptor.c ****         {
 585:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 586:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 587:../../tmk_core/protocol/lufa/descriptor.c **** 
 588:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 589:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 590:../../tmk_core/protocol/lufa/descriptor.c **** 
 591:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 592:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 593:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 594:../../tmk_core/protocol/lufa/descriptor.c **** 
 595:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 596:../../tmk_core/protocol/lufa/descriptor.c ****         },
 597:../../tmk_core/protocol/lufa/descriptor.c **** 
 598:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 599:../../tmk_core/protocol/lufa/descriptor.c ****         {
 600:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 601:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 602:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 603:../../tmk_core/protocol/lufa/descriptor.c **** 
 604:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 605:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 606:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 607:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 608:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 609:../../tmk_core/protocol/lufa/descriptor.c **** 
 610:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 611:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 612:../../tmk_core/protocol/lufa/descriptor.c ****         },
 613:../../tmk_core/protocol/lufa/descriptor.c **** 
 614:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 615:../../tmk_core/protocol/lufa/descriptor.c ****         {
 616:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 617:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 618:../../tmk_core/protocol/lufa/descriptor.c **** 
 619:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 620:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 621:../../tmk_core/protocol/lufa/descriptor.c ****         },
 622:../../tmk_core/protocol/lufa/descriptor.c **** 
 623:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 624:../../tmk_core/protocol/lufa/descriptor.c ****         {
 625:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 626:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 627:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 628:../../tmk_core/protocol/lufa/descriptor.c **** 
 629:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 630:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 631:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 632:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 633:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 634:../../tmk_core/protocol/lufa/descriptor.c **** 
 635:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 636:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 637:../../tmk_core/protocol/lufa/descriptor.c ****         },
 638:../../tmk_core/protocol/lufa/descriptor.c **** 
 639:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 640:../../tmk_core/protocol/lufa/descriptor.c ****         {
 641:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 642:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 643:../../tmk_core/protocol/lufa/descriptor.c **** 
 644:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 645:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 646:../../tmk_core/protocol/lufa/descriptor.c ****         }
 647:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 648:../../tmk_core/protocol/lufa/descriptor.c **** };
 649:../../tmk_core/protocol/lufa/descriptor.c **** 
 650:../../tmk_core/protocol/lufa/descriptor.c **** 
 651:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 652:../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 653:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 654:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 655:../../tmk_core/protocol/lufa/descriptor.c **** {
 656:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 657:../../tmk_core/protocol/lufa/descriptor.c **** 
 658:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 659:../../tmk_core/protocol/lufa/descriptor.c **** };
 660:../../tmk_core/protocol/lufa/descriptor.c **** 
 661:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 662:../../tmk_core/protocol/lufa/descriptor.c **** {
 663:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 664:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 665:../../tmk_core/protocol/lufa/descriptor.c **** 
 666:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 667:../../tmk_core/protocol/lufa/descriptor.c **** };
 668:../../tmk_core/protocol/lufa/descriptor.c **** 
 669:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 670:../../tmk_core/protocol/lufa/descriptor.c **** {
 671:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 672:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 673:../../tmk_core/protocol/lufa/descriptor.c **** 
 674:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 675:../../tmk_core/protocol/lufa/descriptor.c **** };
 676:../../tmk_core/protocol/lufa/descriptor.c **** 
 677:../../tmk_core/protocol/lufa/descriptor.c **** 
 678:../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 679:../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 680:../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 681:../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 682:../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 683:../../tmk_core/protocol/lufa/descriptor.c ****  */
 684:../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 685:../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 686:../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 687:../../tmk_core/protocol/lufa/descriptor.c **** {
  16               		.loc 1 687 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 688:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  23               		.loc 1 688 0
  24 0000 292F      		mov r18,r25
  25 0002 3327      		clr r19
 689:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 690:../../tmk_core/protocol/lufa/descriptor.c **** 
 691:../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 692:../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 693:../../tmk_core/protocol/lufa/descriptor.c **** 
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  26               		.loc 1 694 0
  27 0004 2330      		cpi r18,3
  28 0006 3105      		cpc r19,__zero_reg__
  29 0008 01F0      		breq .L3
  30 000a 04F4      		brge .L4
  31 000c 2130      		cpi r18,1
  32 000e 3105      		cpc r19,__zero_reg__
  33 0010 01F0      		breq .L16
  34 0012 2230      		cpi r18,2
  35 0014 3105      		cpc r19,__zero_reg__
  36 0016 01F4      		brne .L20
  37               	.LVL1:
 695:../../tmk_core/protocol/lufa/descriptor.c ****     {
 696:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 699:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 700:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 702:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  38               		.loc 1 702 0
  39 0018 8BE3      		ldi r24,lo8(59)
  40 001a 90E0      		ldi r25,0
  41               	.LVL2:
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  42               		.loc 1 701 0
  43 001c 20E0      		ldi r18,lo8(ConfigurationDescriptor)
  44 001e 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 703:../../tmk_core/protocol/lufa/descriptor.c ****             break;
  45               		.loc 1 703 0
  46 0020 00C0      		rjmp .L5
  47               	.LVL3:
  48               	.L4:
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  49               		.loc 1 694 0
  50 0022 2132      		cpi r18,33
  51 0024 3105      		cpc r19,__zero_reg__
  52 0026 01F0      		breq .L7
  53 0028 2232      		cpi r18,34
  54 002a 3105      		cpc r19,__zero_reg__
  55 002c 01F0      		breq .L8
  56 002e 00C0      		rjmp .L20
  57               	.L3:
  58 0030 9927      		clr r25
  59               	.LVL4:
 704:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 705:../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  60               		.loc 1 705 0
  61 0032 8130      		cpi r24,1
  62 0034 9105      		cpc r25,__zero_reg__
  63 0036 01F0      		breq .L9
  64 0038 8230      		cpi r24,2
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F0      		breq .L10
  67 003e 892B      		or r24,r25
  68 0040 01F4      		brne .L20
  69               	.LVL5:
  70               	.LBB2:
 706:../../tmk_core/protocol/lufa/descriptor.c ****             {
 707:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 708:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 709:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  71               		.loc 1 709 0
  72 0042 E0E0      		ldi r30,lo8(LanguageString)
  73 0044 F0E0      		ldi r31,hi8(LanguageString)
  74 0046 00C0      		rjmp .L21
  75               	.LVL6:
  76               	.L9:
  77               	.LBE2:
  78               	.LBB3:
 710:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 711:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 712:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 713:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  79               		.loc 1 713 0
  80 0048 E0E0      		ldi r30,lo8(ManufacturerString)
  81 004a F0E0      		ldi r31,hi8(ManufacturerString)
  82 004c 00C0      		rjmp .L21
  83               	.LVL7:
  84               	.L10:
  85               	.LBE3:
  86               	.LBB4:
 714:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 715:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 717:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
  87               		.loc 1 717 0
  88 004e E0E0      		ldi r30,lo8(ProductString)
  89 0050 F0E0      		ldi r31,hi8(ProductString)
  90               	.LVL8:
  91               	.L21:
  92               	/* #APP */
  93               	 ;  717 "../../tmk_core/protocol/lufa/descriptor.c" 1
  94 0052 8491      		lpm r24, Z
  95               		
  96               	 ;  0 "" 2
  97               	.LVL9:
  98               	/* #NOAPP */
  99               	.LBE4:
 100 0054 90E0      		ldi r25,0
 101               	.LVL10:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 102               		.loc 1 716 0
 103 0056 9F01      		movw r18,r30
 718:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 104               		.loc 1 718 0
 105 0058 00C0      		rjmp .L5
 106               	.LVL11:
 107               	.L7:
 719:../../tmk_core/protocol/lufa/descriptor.c ****             }
 720:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 721:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 722:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 108               		.loc 1 722 0
 109 005a 6623      		tst r22
 110 005c 01F0      		breq .L18
 111 005e 6130      		cpi r22,lo8(1)
 112 0060 01F4      		brne .L20
 113               	.LVL12:
 723:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 724:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 725:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 726:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 727:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 728:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 729:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 730:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 731:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 732:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 733:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 734:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 735:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 736:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 737:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 738:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 739:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 740:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 741:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 742:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 743:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 744:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 745:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 746:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 747:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 748:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 114               		.loc 1 748 0
 115 0062 89E0      		ldi r24,lo8(9)
 116 0064 90E0      		ldi r25,0
 117               	.LVL13:
 747:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 118               		.loc 1 747 0
 119 0066 20E0      		ldi r18,lo8(ConfigurationDescriptor+43)
 120 0068 30E0      		ldi r19,hi8(ConfigurationDescriptor+43)
 121               	.LVL14:
 749:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 122               		.loc 1 749 0
 123 006a 00C0      		rjmp .L5
 124               	.LVL15:
 125               	.L8:
 750:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 751:../../tmk_core/protocol/lufa/descriptor.c ****             }
 752:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 753:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 754:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 126               		.loc 1 754 0
 127 006c 6623      		tst r22
 128 006e 01F0      		breq .L19
 129 0070 6130      		cpi r22,lo8(1)
 130 0072 01F4      		brne .L20
 131               	.LVL16:
 755:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 756:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 757:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 758:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 759:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 760:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 761:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 762:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 763:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 764:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 765:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 766:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 767:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 768:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 769:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 770:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 771:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 772:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 773:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 774:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 775:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 776:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 777:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 778:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 779:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 780:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 132               		.loc 1 780 0
 133 0074 89E3      		ldi r24,lo8(57)
 134 0076 90E0      		ldi r25,0
 135               	.LVL17:
 779:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 136               		.loc 1 779 0
 137 0078 20E0      		ldi r18,lo8(NKROReport)
 138 007a 30E0      		ldi r19,hi8(NKROReport)
 781:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 139               		.loc 1 781 0
 140 007c 00C0      		rjmp .L5
 141               	.LVL18:
 142               	.L16:
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 143               		.loc 1 698 0
 144 007e 82E1      		ldi r24,lo8(18)
 145 0080 90E0      		ldi r25,0
 146               	.LVL19:
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 147               		.loc 1 697 0
 148 0082 20E0      		ldi r18,lo8(DeviceDescriptor)
 149 0084 30E0      		ldi r19,hi8(DeviceDescriptor)
 150 0086 00C0      		rjmp .L5
 151               	.L20:
 692:../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 152               		.loc 1 692 0
 153 0088 80E0      		ldi r24,0
 154 008a 90E0      		ldi r25,0
 691:../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 155               		.loc 1 691 0
 156 008c 20E0      		ldi r18,0
 157 008e 30E0      		ldi r19,0
 158 0090 00C0      		rjmp .L5
 159               	.LVL20:
 160               	.L18:
 725:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 161               		.loc 1 725 0
 162 0092 89E0      		ldi r24,lo8(9)
 163 0094 90E0      		ldi r25,0
 164               	.LVL21:
 724:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 165               		.loc 1 724 0
 166 0096 20E0      		ldi r18,lo8(ConfigurationDescriptor+18)
 167 0098 30E0      		ldi r19,hi8(ConfigurationDescriptor+18)
 168 009a 00C0      		rjmp .L5
 169               	.LVL22:
 170               	.L19:
 757:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 171               		.loc 1 757 0
 172 009c 80E4      		ldi r24,lo8(64)
 173 009e 90E0      		ldi r25,0
 174               	.LVL23:
 756:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 175               		.loc 1 756 0
 176 00a0 20E0      		ldi r18,lo8(KeyboardReport)
 177 00a2 30E0      		ldi r19,hi8(KeyboardReport)
 178               	.LVL24:
 179               	.L5:
 782:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 783:../../tmk_core/protocol/lufa/descriptor.c ****             }
 784:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 785:../../tmk_core/protocol/lufa/descriptor.c ****     }
 786:../../tmk_core/protocol/lufa/descriptor.c **** 
 787:../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 180               		.loc 1 787 0
 181 00a4 FA01      		movw r30,r20
 182 00a6 3183      		std Z+1,r19
 183 00a8 2083      		st Z,r18
 788:../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 789:../../tmk_core/protocol/lufa/descriptor.c **** }
 184               		.loc 1 789 0
 185 00aa 0895      		ret
 186               		.cfi_endproc
 187               	.LFE100:
 189               	.global	ProductString
 190               		.section	.progmem.data.ProductString,"a",@progbits
 193               	ProductString:
 194 0000 28        		.byte	40
 195 0001 03        		.byte	3
 196 0002 5400      		.string	"T"
 197 0004 6800      		.string	"h"
 198 0006 6500      		.string	"e"
 199 0008 2000      		.string	" "
 200 000a 5000      		.string	"P"
 201 000c 6C00      		.string	"l"
 202 000e 6100      		.string	"a"
 203 0010 6E00      		.string	"n"
 204 0012 6300      		.string	"c"
 205 0014 6B00      		.string	"k"
 206 0016 2000      		.string	" "
 207 0018 4B00      		.string	"K"
 208 001a 6500      		.string	"e"
 209 001c 7900      		.string	"y"
 210 001e 6200      		.string	"b"
 211 0020 6F00      		.string	"o"
 212 0022 6100      		.string	"a"
 213 0024 7200      		.string	"r"
 214 0026 6400      		.string	"d"
 215 0028 00        		.string	""
 216 0029 00        		.string	""
 217               	.global	ManufacturerString
 218               		.section	.progmem.data.ManufacturerString,"a",@progbits
 221               	ManufacturerString:
 222 0000 2C        		.byte	44
 223 0001 03        		.byte	3
 224 0002 4F00      		.string	"O"
 225 0004 7200      		.string	"r"
 226 0006 7400      		.string	"t"
 227 0008 6800      		.string	"h"
 228 000a 6F00      		.string	"o"
 229 000c 6C00      		.string	"l"
 230 000e 6900      		.string	"i"
 231 0010 6E00      		.string	"n"
 232 0012 6500      		.string	"e"
 233 0014 6100      		.string	"a"
 234 0016 7200      		.string	"r"
 235 0018 2000      		.string	" "
 236 001a 4B00      		.string	"K"
 237 001c 6500      		.string	"e"
 238 001e 7900      		.string	"y"
 239 0020 6200      		.string	"b"
 240 0022 6F00      		.string	"o"
 241 0024 6100      		.string	"a"
 242 0026 7200      		.string	"r"
 243 0028 6400      		.string	"d"
 244 002a 7300      		.string	"s"
 245 002c 00        		.string	""
 246 002d 00        		.string	""
 247               	.global	LanguageString
 248               		.section	.progmem.data.LanguageString,"a",@progbits
 251               	LanguageString:
 252 0000 04        		.byte	4
 253 0001 03        		.byte	3
 254 0002 0904      		.word	1033
 255               	.global	ConfigurationDescriptor
 256               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 259               	ConfigurationDescriptor:
 260 0000 09        		.byte	9
 261 0001 02        		.byte	2
 262 0002 3B00      		.word	59
 263 0004 02        		.byte	2
 264 0005 01        		.byte	1
 265 0006 00        		.byte	0
 266 0007 A0        		.byte	-96
 267 0008 FA        		.byte	-6
 268 0009 09        		.byte	9
 269 000a 04        		.byte	4
 270 000b 00        		.byte	0
 271 000c 00        		.byte	0
 272 000d 01        		.byte	1
 273 000e 03        		.byte	3
 274 000f 01        		.byte	1
 275 0010 01        		.byte	1
 276 0011 00        		.byte	0
 277 0012 09        		.byte	9
 278 0013 21        		.byte	33
 279 0014 1101      		.word	273
 280 0016 00        		.byte	0
 281 0017 01        		.byte	1
 282 0018 22        		.byte	34
 283 0019 4000      		.word	64
 284 001b 07        		.byte	7
 285 001c 05        		.byte	5
 286 001d 81        		.byte	-127
 287 001e 03        		.byte	3
 288 001f 0800      		.word	8
 289 0021 0A        		.byte	10
 290 0022 09        		.byte	9
 291 0023 04        		.byte	4
 292 0024 01        		.byte	1
 293 0025 00        		.byte	0
 294 0026 01        		.byte	1
 295 0027 03        		.byte	3
 296 0028 00        		.byte	0
 297 0029 00        		.byte	0
 298 002a 00        		.byte	0
 299 002b 09        		.byte	9
 300 002c 21        		.byte	33
 301 002d 1101      		.word	273
 302 002f 00        		.byte	0
 303 0030 01        		.byte	1
 304 0031 22        		.byte	34
 305 0032 3900      		.word	57
 306 0034 07        		.byte	7
 307 0035 05        		.byte	5
 308 0036 82        		.byte	-126
 309 0037 03        		.byte	3
 310 0038 1000      		.word	16
 311 003a 01        		.byte	1
 312               	.global	DeviceDescriptor
 313               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 316               	DeviceDescriptor:
 317 0000 12        		.byte	18
 318 0001 01        		.byte	1
 319 0002 1001      		.word	272
 320 0004 00        		.byte	0
 321 0005 00        		.byte	0
 322 0006 00        		.byte	0
 323 0007 08        		.byte	8
 324 0008 EDFE      		.word	-275
 325 000a 6060      		.word	24672
 326 000c 0400      		.word	4
 327 000e 01        		.byte	1
 328 000f 02        		.byte	2
 329 0010 00        		.byte	0
 330 0011 01        		.byte	1
 331               	.global	NKROReport
 332               		.section	.progmem.data.NKROReport,"a",@progbits
 335               	NKROReport:
 336 0000 05        		.byte	5
 337 0001 01        		.byte	1
 338 0002 09        		.byte	9
 339 0003 06        		.byte	6
 340 0004 A1        		.byte	-95
 341 0005 01        		.byte	1
 342 0006 05        		.byte	5
 343 0007 07        		.byte	7
 344 0008 19        		.byte	25
 345 0009 E0        		.byte	-32
 346 000a 29        		.byte	41
 347 000b E7        		.byte	-25
 348 000c 15        		.byte	21
 349 000d 00        		.byte	0
 350 000e 25        		.byte	37
 351 000f 01        		.byte	1
 352 0010 95        		.byte	-107
 353 0011 08        		.byte	8
 354 0012 75        		.byte	117
 355 0013 01        		.byte	1
 356 0014 81        		.byte	-127
 357 0015 02        		.byte	2
 358 0016 05        		.byte	5
 359 0017 08        		.byte	8
 360 0018 19        		.byte	25
 361 0019 01        		.byte	1
 362 001a 29        		.byte	41
 363 001b 05        		.byte	5
 364 001c 95        		.byte	-107
 365 001d 05        		.byte	5
 366 001e 75        		.byte	117
 367 001f 01        		.byte	1
 368 0020 91        		.byte	-111
 369 0021 02        		.byte	2
 370 0022 95        		.byte	-107
 371 0023 01        		.byte	1
 372 0024 75        		.byte	117
 373 0025 03        		.byte	3
 374 0026 91        		.byte	-111
 375 0027 01        		.byte	1
 376 0028 05        		.byte	5
 377 0029 07        		.byte	7
 378 002a 19        		.byte	25
 379 002b 00        		.byte	0
 380 002c 29        		.byte	41
 381 002d 77        		.byte	119
 382 002e 15        		.byte	21
 383 002f 00        		.byte	0
 384 0030 25        		.byte	37
 385 0031 01        		.byte	1
 386 0032 95        		.byte	-107
 387 0033 78        		.byte	120
 388 0034 75        		.byte	117
 389 0035 01        		.byte	1
 390 0036 81        		.byte	-127
 391 0037 02        		.byte	2
 392 0038 C0        		.byte	-64
 393               	.global	KeyboardReport
 394               		.section	.progmem.data.KeyboardReport,"a",@progbits
 397               	KeyboardReport:
 398 0000 05        		.byte	5
 399 0001 01        		.byte	1
 400 0002 09        		.byte	9
 401 0003 06        		.byte	6
 402 0004 A1        		.byte	-95
 403 0005 01        		.byte	1
 404 0006 05        		.byte	5
 405 0007 07        		.byte	7
 406 0008 19        		.byte	25
 407 0009 E0        		.byte	-32
 408 000a 29        		.byte	41
 409 000b E7        		.byte	-25
 410 000c 15        		.byte	21
 411 000d 00        		.byte	0
 412 000e 25        		.byte	37
 413 000f 01        		.byte	1
 414 0010 95        		.byte	-107
 415 0011 08        		.byte	8
 416 0012 75        		.byte	117
 417 0013 01        		.byte	1
 418 0014 81        		.byte	-127
 419 0015 02        		.byte	2
 420 0016 95        		.byte	-107
 421 0017 01        		.byte	1
 422 0018 75        		.byte	117
 423 0019 08        		.byte	8
 424 001a 81        		.byte	-127
 425 001b 01        		.byte	1
 426 001c 05        		.byte	5
 427 001d 08        		.byte	8
 428 001e 19        		.byte	25
 429 001f 01        		.byte	1
 430 0020 29        		.byte	41
 431 0021 05        		.byte	5
 432 0022 95        		.byte	-107
 433 0023 05        		.byte	5
 434 0024 75        		.byte	117
 435 0025 01        		.byte	1
 436 0026 91        		.byte	-111
 437 0027 02        		.byte	2
 438 0028 95        		.byte	-107
 439 0029 01        		.byte	1
 440 002a 75        		.byte	117
 441 002b 03        		.byte	3
 442 002c 91        		.byte	-111
 443 002d 01        		.byte	1
 444 002e 05        		.byte	5
 445 002f 07        		.byte	7
 446 0030 19        		.byte	25
 447 0031 00        		.byte	0
 448 0032 29        		.byte	41
 449 0033 FF        		.byte	-1
 450 0034 15        		.byte	21
 451 0035 00        		.byte	0
 452 0036 26        		.byte	38
 453 0037 FF        		.byte	-1
 454 0038 00        		.byte	0
 455 0039 95        		.byte	-107
 456 003a 06        		.byte	6
 457 003b 75        		.byte	117
 458 003c 08        		.byte	8
 459 003d 81        		.byte	-127
 460 003e 00        		.byte	0
 461 003f C0        		.byte	-64
 462               		.text
 463               	.Letext0:
 464               		.file 2 "/usr/lib/avr/include/stdint.h"
 465               		.file 3 "/usr/lib/gcc/avr/4.8.2/include/stddef.h"
 466               		.file 4 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 467               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCom
 468               		.file 6 "../../tmk_core/protocol/lufa/descriptor.h"
 469               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/ccMFPSSR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccMFPSSR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccMFPSSR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccMFPSSR.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccMFPSSR.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccMFPSSR.s:13     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/ccMFPSSR.s:259    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/ccMFPSSR.s:251    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/ccMFPSSR.s:221    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/ccMFPSSR.s:193    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/ccMFPSSR.s:335    .progmem.data.NKROReport:0000000000000000 NKROReport
     /tmp/ccMFPSSR.s:316    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/ccMFPSSR.s:397    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport

NO UNDEFINED SYMBOLS
